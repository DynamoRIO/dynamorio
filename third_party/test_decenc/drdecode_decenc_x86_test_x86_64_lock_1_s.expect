test_x86_64_lock_1_s:
 f0 01 03             lock add    %eax, (%rbx)
 f0 83 03 64          lock addl   $0x64, (%rbx)
 f0 11 03             lock adc    %eax, (%rbx)
 f0 83 13 64          lock adcl   $0x64, (%rbx)
 f0 21 03             lock and    %eax, (%rbx)
 f0 83 23 64          lock andl   $0x64, (%rbx)
 f0 0f bb 03          lock btc    %eax, (%rbx)
 f0 0f ba 3b 64       lock btcl   $0x64, (%rbx)
 f0 0f b3 03          lock btr    %eax, (%rbx)
 f0 0f ba 33 64       lock btrl   $0x64, (%rbx)
 f0 0f ab 03          lock bts    %eax, (%rbx)
 f0 0f ba 2b 64       lock btsl   $0x64, (%rbx)
 f0 0f b1 03          lock cmpxchg %eax, (%rbx), %eax
 f0 0f c7 0b          lock cmpxchg8bq (%rbx)
 f0 48 0f c7 0b       lock cmpxchg8b (%rbx)
 f0 ff 0b             lock decl   (%rbx)
 f0 ff 03             lock incl   (%rbx)
 f0 f7 1b             lock negl   (%rbx)
 f0 f7 13             lock notl   (%rbx)
 f0 09 03             lock or     %eax, (%rbx)
 f0 83 0b 64          lock orl    $0x64, (%rbx)
 f0 19 03             lock sbb    %eax, (%rbx)
 f0 83 1b 64          lock sbbl   $0x64, (%rbx)
 f0 29 03             lock sub    %eax, (%rbx)
 f0 83 2b 64          lock subl   $0x64, (%rbx)
 f0 0f c1 03          lock xaddl  (%rbx), %eax
 f0 87 03             lock xchgl  (%rbx), %eax
 f0 87 03             lock xchgl  (%rbx), %eax
 f0 31 03             lock xor    %eax, (%rbx)
 f0 83 33 64          lock xorl   $0x64, (%rbx)
 f0 01 03             lock add    %eax, (%rbx)
 f0 83 03 64          lock addl   $0x64, (%rbx)
 f0 11 03             lock adc    %eax, (%rbx)
 f0 83 13 64          lock adcl   $0x64, (%rbx)
 f0 21 03             lock and    %eax, (%rbx)
 f0 83 23 64          lock andl   $0x64, (%rbx)
 f0 0f bb 03          lock btc    %eax, (%rbx)
 f0 0f ba 3b 64       lock btcl   $0x64, (%rbx)
 f0 0f b3 03          lock btr    %eax, (%rbx)
 f0 0f ba 33 64       lock btrl   $0x64, (%rbx)
 f0 0f ab 03          lock bts    %eax, (%rbx)
 f0 0f ba 2b 64       lock btsl   $0x64, (%rbx)
 f0 0f b1 03          lock cmpxchg %eax, (%rbx), %eax
 f0 0f c7 0b          lock cmpxchg8bq (%rbx)
 f0 48 0f c7 0b       lock cmpxchg8b (%rbx)
 f0 ff 0b             lock decl   (%rbx)
 f0 ff 03             lock incl   (%rbx)
 f0 f7 1b             lock negl   (%rbx)
 f0 f7 13             lock notl   (%rbx)
 f0 09 03             lock or     %eax, (%rbx)
 f0 83 0b 64          lock orl    $0x64, (%rbx)
 f0 19 03             lock sbb    %eax, (%rbx)
 f0 83 1b 64          lock sbbl   $0x64, (%rbx)
 f0 29 03             lock sub    %eax, (%rbx)
 f0 83 2b 64          lock subl   $0x64, (%rbx)
 f0 0f c1 03          lock xaddl  (%rbx), %eax
 f0 87 03             lock xchgl  (%rbx), %eax
 f0 87 03             lock xchgl  (%rbx), %eax
 f0 31 03             lock xor    %eax, (%rbx)
 f0 83 33 64          lock xorl   $0x64, (%rbx)
 90                   nop
 90                   nop
 90                   nop
 90                   nop
 90                   nop
 90                   nop
 90                   nop
 90                   nop
 90                   nop
 90                   nop
 90                   nop
 90                   nop
 90                   nop
 90                   nop
 90                   nop
 90                   nop
done
