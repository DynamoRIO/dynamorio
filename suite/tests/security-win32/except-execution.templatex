// Note that this a .templatex so we can we use regex chars
// to work around platform differences, so be sure to escape
// any regex chars that should be literals.
In RaiseException filter
In RaiseException handler
Inside first filter eax=badcdef0
	exception code = 0xc0000005, ExceptionFlags=0x00000000
	record=00000000, params=2
	PC 0x00401... tried to read address 0xbadcdef0
	pc=0x00401... eax=0xbadcdef0
  ContextFlags=0x000100.f 
  Edi=0xeecdcdcd Esi=0xffcdcdcd Ebx=0xbbcdcdcd 
  Edx=0xddcdcdcd Ecx=0xcccdcdcd 
  
  Eax=0xbadcdef0@&
  Ebp=0x1400ef.. Eip=0x00401... SegCs=0x000000.. 
  EFlags & 0xFFFF=0x00000202 Esp=0x1400eb.. SegSs=0x000000.. 
  <floating point area>
  SegGs=0x000000.. SegFs=0x000000.. SegEs=0x000000.. SegDs=0x000000.. 
Inside first handler
At statement after 1st try-except
Inside 2nd filter
Inside 3rd filter
	exception code = 0xc0000005, ExceptionFlags=0x00000000
	record=00000000, params=2
	PC 0xdeadbeef tried to read address 0xdeadbeef
	pc=0xdeadbeef eax=0x00000000
  ContextFlags=0x000100.f 
  Edi=0xeecdcdcd Esi=0xffcdcdcd Ebx=0xbbcdcdcd 
  Edx=0xdeadbeef Ecx=0xcccdcdcd 
  
  Eax=0x00000000@&
  Ebp=0x1400ef.. Eip=0xdeadbeef SegCs=0x000000.. 
  EFlags & 0xFFFF=0x00000202 Esp=0x1400eb.. SegSs=0x000000.. 
  <floating point area>
  SegGs=0x000000.. SegFs=0x000000.. SegEs=0x000000.. SegDs=0x000000.. 
Finally!
Expected memory access violation, ignoring it!
After exception handler
Attempting execution of badfunc
#if (defined(PROGRAM_SHEPHERDING) && defined(security) && !defined(detect_mode) && !defined(kill_thread) && !defined(throw_exception) && !defined(executable_stack) && !defined(low) && !defined(client) && !defined(thin_client)) || (defined(PROGRAM_SHEPHERDING) && defined(security) && defined(internal_detach_mask___0x1))
   SEC_VIO_STOP
#  if !defined(internal_detach_mask)
    STOP
#  endif
#endif
#if defined(PROGRAM_SHEPHERDING) && defined(security) && defined(detect_mode) && !defined(low) && !defined(client) && !defined(thin_client)
   SEC_VIO_CONT
#endif
#if defined(PROGRAM_SHEPHERDING) && defined(security) && !defined(detect_mode) && defined(kill_thread) && !defined(throw_exception) && !defined(low) && !defined(client) && !defined(thin_client)
   SEC_VIO_THREAD
   STOP
#endif
#if defined(PROGRAM_SHEPHERDING) && defined(security) && !defined(detect_mode) && defined(throw_exception) && !defined(low) && !defined(client) && !defined(thin_client)
   SEC_VIO_EXCEPTION
DATA VIOLATION: Inside first filter eax=0
	exception code = 0xc0000005, ExceptionFlags=0x00000000
	record=00000000, params=2
	PC 0x1400ec.. tried to read address 0x1400ec..
	pc=0x1400ec.. eax=0x00000000
  ContextFlags=0x000100.f 
  Edi=0xeecdcdcd Esi=0xffcdcdcd Ebx=0xbbcdcdcd 
  Edx=0xddcdcdcd Ecx=0xcccdcdcd 
  
  Eax=0x00000000@&
  Ebp=0x1400ef.. Eip=0x1400ec.. SegCs=0x000000.. 
  EFlags & 0xFFFF=0x00000202 Esp=0x1400eb.. SegSs=0x000000.. 
  <floating point area>
  SegGs=0x000000.. SegFs=0x000000.. SegEs=0x000000.. SegDs=0x000000.. 
DATA VIOLATION: Inside first handler
DATA: At statement after 1st try-except
#  if defined(PROGRAM_SHEPHERDING) && defined(security) && defined(throw_exception) && defined(throw_exception_max) && defined(1)
#    if defined(kill_thread)
       SEC_VIO_THREAD
#    else
       SEC_VIO_STOP
#    endif
#  else
     SEC_VIO_EXCEPTION
DATA: Finally!
DATA: Expected execution violation!
	exception code = 0xc0000005, ExceptionFlags=0x00000000
	record=00000000, params=2
	PC 0x1400ec.. tried to read address 0x1400ec..
	pc=0x1400ec.. eax=0x00000000
  ContextFlags=0x000100.f 
  Edi=0xeecdcdcd Esi=0xffcdcdcd Ebx=0xbbcdcdcd 
  Edx=0xddcdcdcd Ecx=0xcccdcdcd 
  
  Eax=0x00000000@&
  Ebp=0x1400ef.. Eip=0x1400ec.. SegCs=0x000000.. 
  EFlags & 0xFFFF=0x00000202 Esp=0x1400eb.. SegSs=0x000000.. 
  <floating point area>
  SegGs=0x000000.. SegFs=0x000000.. SegEs=0x000000.. SegDs=0x000000.. 
DATA: After exception handler
#  endif
   STOP
#endif
DATA: At statement after exception
DATA: At statement after 1st try-except
DATA: Inside 2nd try
DATA: Finally!
DATA: At statement after 2nd try-finally
DATA: After exception handler
